#ifndef MIPS_DEFINE_H_
#define MIPS_DEFINE_H_

#include <stdint.h>

#define MIPS_INST_R_OPCODE			(0x00)
#define MIPS_INST_ADD_R_FUNCT		(0x20)
#define MIPS_INST_ADDI_OPCODE		(0x08)
#define MIPS_INST_ADDIU_OPCODE		(0x09)
#define MIPS_INST_ADDU_R_FUNCT		(0x21)
#define MIPS_INST_AND_R_FUNCT		(0x24)
#define MIPS_INST_ANDI_OPCODE		(0x0c)
#define MIPS_INST_BEQ_OPCODE		(0x04)
#define MIPS_INST_BNE_OPCODE		(0x05)
#define MIPS_INST_J_OPCODE			(0x02)
#define MIPS_INST_JAL_OPCODE		(0x03)
#define MIPS_INST_JR_R_FUNCT		(0x08)
#define MIPS_INST_LBU_OPCODE		(0x24)
#define MIPS_INST_LHU_OPCODE		(0x25)
#define MIPS_INST_LL_OPCODE			(0x30)
#define MIPS_INST_LUI_OPCODE		(0x0f)
#define MIPS_INST_LW_OPCODE			(0x23)
#define MIPS_INST_NOR_R_FUNCT		(0x27)
#define MIPS_INST_OR_R_FUNCT		(0x25)
#define MIPS_INST_ORI_OPCODE		(0x0d)
#define MIPS_INST_SLT_R_FUNCT		(0x2a)
#define MIPS_INST_SLTI_OPCODE		(0x0a)
#define MIPS_INST_SLTIU_OPCODE		(0x0b)
#define MIPS_INST_SLTU_R_FUNCT		(0x2b)
#define MIPS_INST_SLL_R_FUNCT		(0x00)
#define MIPS_INST_SRL_R_FUNCT		(0x02)
#define MIPS_INST_SB_OPCODE			(0x28)
#define MIPS_INST_SC_OPCODE			(0x38)
#define MIPS_INST_SH_OPCODE			(0x29)
#define MIPS_INST_SW_OPCODE			(0x2b)
#define MIPS_INST_SUB_R_FUNCT		(0x22)
#define MIPS_INST_SUBU_R_FUNCT		(0x23)
#define MIPS_INST_F_OPCODE			(0x11)
#define MIPS_INST_BCLT_FI_FMT		(0x08)
#define MIPS_INST_BCLT_FI_FT		(0x01)
#define MIPS_INST_BCLF_FI_FMT		(0x08)
#define MIPS_INST_BCLF_FI_FT		(0x00)
#define MIPS_INST_DIV_R_FUNCT		(0x1a)
#define MIPS_INST_DIVU_R_FUNCT		(0x1b)
#define MIPS_FR_SINGLE_FMT			(0x10)
#define MIPS_FR_DOUBLE_FMT			(0x11)
#define MIPS_INST_ADD_FR_FUNCT		(0x00)
#define MIPS_INST_C_EQ_FR_FUNCT		(0x32)
#define MIPS_INST_C_LT_FR_FUNCT		(0x3c)
#define MIPS_INST_C_LE_FR_FUNCT		(0x3e)
#define MIPS_INST_DIV_FR_FUNCT		(0x03)
#define MIPS_INST_MUL_FR_FUNCT		(0x02)
#define MIPS_INST_SUB_FR_FUNCT		(0x01)
#define MIPS_INST_LWCL_OPCODE		(0x31)
#define MIPS_INST_LDCL_OPCODE		(0x35)
#define MIPS_INST_MFHI_R_FUNCT		(0x10)
#define MIPS_INST_MFLO_R_FUNCT		(0x12)
#define MIPS_INST_MFC0_OPCODE		(0x10)
#define MIPS_INST_MFC0_FUNCT		(0x00)
#define MIPS_INST_MULT_R_FUNCT		(0x18)
#define MIPS_INST_MULTU_R_FUNCT		(0x19)
#define MIPS_INST_SRA_R_FUNCT		(0x03)
#define MIPS_INST_SWCL_OPCODE		(0x39)
#define MIPS_INST_SDCL_OPCODE		(0x3d)

#define MIPS_REGISTER_ZERO			(0)
#define MIPS_REGISTER_AT			(1)
#define MIPS_REGISTER_V0			(2)
#define MIPS_REGISTER_V1			(3)
#define MIPS_REGISTER_A0			(4)
#define MIPS_REGISTER_A1			(5)
#define MIPS_REGISTER_A2			(6)
#define MIPS_REGISTER_A3			(7)
#define MIPS_REGISTER_T0			(8)
#define MIPS_REGISTER_T1			(9)
#define MIPS_REGISTER_T2			(10)
#define MIPS_REGISTER_T3			(11)
#define MIPS_REGISTER_T4			(12)
#define MIPS_REGISTER_T5			(13)
#define MIPS_REGISTER_T6			(14)
#define MIPS_REGISTER_T7			(15)
#define MIPS_REGISTER_S0			(16)
#define MIPS_REGISTER_S1			(17)
#define MIPS_REGISTER_S2			(18)
#define MIPS_REGISTER_S3			(19)
#define MIPS_REGISTER_S4			(20)
#define MIPS_REGISTER_S5			(21)
#define MIPS_REGISTER_S6			(22)
#define MIPS_REGISTER_S7			(23)
#define MIPS_REGISTER_T8			(24)
#define MIPS_REGISTER_T9			(25)
#define MIPS_REGISTER_K0			(26)
#define MIPS_REGISTER_K1			(27)
#define MIPS_REGISTER_GP			(28)
#define MIPS_REGISTER_SP			(29)
#define MIPS_REGISTER_FP			(30)
#define MIPS_REGISTER_RA			(31)

#pragma pack(push)
#pragma pack(1)
typedef union MIPS_Inst_Format {
	uint32_t code;
	struct {	// Format R
#ifdef LITTLE_ENDIAN
		size_t funct : 6;
		size_t shamt : 5;
		size_t rd : 5;
		size_t rt : 5;
		size_t rs : 5;
		size_t opcode : 6;
#else
		size_t opcode : 6;
		size_t rs : 5;		// fmt
		size_t rt : 5;		// ft
		size_t rd : 5;		// fs
		size_t shamt : 5;	// fd
		size_t funct : 6;
#endif
	} r;
	struct {	// Format I
#ifdef LITTLE_ENDIAN
		size_t immediate : 16;
		size_t rt : 5;
		size_t rs : 5;
		size_t opcode : 6;
#else
		size_t opcode : 6;
		size_t rs : 5;	// fmt
		size_t rt : 5;	// ft
		size_t immediate : 16;
#endif
	} i;
	struct {	// Format J
#ifdef LITTLE_ENDIAN
		size_t address : 26;
		size_t opcode : 6;
#else
		size_t opcode : 6;
		size_t address : 26;
#endif
	} j;
} MIPS_Inst_Format_t;
#pragma pack(pop)

#define MIPS_FORMAT_R(RS, RT, RD, SHAMT, FUNCT)		((MIPS_Inst_Format_t) {.r.opcode=MIPS_INST_R_OPCODE,	.r.rs=RS,	.r.rt=RT,	.r.rd=RD,	.r.shamt=SHAMT,	.r.funct=FUNCT})
#define MIPS_FORMAT_I(OPCODE, RS, RT, IMMEDIATE)	((MIPS_Inst_Format_t) {.i.opcode=OPCODE,				.i.rs=RS,	.i.rt=RT,	.i.immediate=IMMEDIATE})
#define MIPS_FORMAT_J(OPCODE, ADDRESS)				((MIPS_Inst_Format_t) {.j.opcode=OPCODE,										.j.address=ADDRESS})
#define MIPS_FORMAT_FR(FMT, FT, FS, FD, FUNCT)		((MIPS_Inst_Format_t) {.r.opcode=MIPS_INST_F_OPCODE,	.r.rs=FMT,	.r.rt=FT,	.r.rd=FS,	.r.shamt=FD,	.r.funct=FUNCT})
#define MIPS_FORMAT_FI(FMT, FT, IMMEDIATE)			((MIPS_Inst_Format_t) {.i.opcode=MIPS_INST_F_OPCODE,	.i.rs=FMT,	.i.rt=FT,	.i.immediate=IMMEDIATE})

#define MIPS_INST_ADD(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_ADD_R_FUNCT))
#define MIPS_INST_ADDI(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_ADDI_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_ADDIU(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_ADDIU_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_ADDU(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_ADDU_R_FUNCT))
#define MIPS_INST_AND(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_AND_R_FUNCT))
#define MIPS_INST_ANDI(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_ANDI_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_BEQ(RS, RT, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_BEQ_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_BNE(RS, RT, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_BNE_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_J(IMMEDIATE)				(MIPS_FORMAT_J(MIPS_INST_J_OPCODE, IMMEDIATE))
#define MIPS_INST_JAL(OFFSET)				(MIPS_FORMAT_J(MIPS_INST_JAL_OPCODE, OFFSET))
#define MIPS_INST_JR(RS)					(MIPS_FORMAT_R(RS, 0, 0, 0, MIPS_INST_JR_R_FUNCT))
#define MIPS_INST_LBU(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_LBU_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_LHU(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_LHU_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_LL(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_LL_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_LUI(RT, IMMEDIATE)		(MIPS_FORMAT_I(MIPS_INST_LUI_OPCODE, 0, RT, IMMEDIATE))
#define MIPS_INST_LW(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_LW_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_NOR(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_NOR_R_FUNCT))
#define MIPS_INST_OR(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_OR_R_FUNCT))
#define MIPS_INST_ORI(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_ORI_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_SLT(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_SLT_R_FUNCT))
#define MIPS_INST_SLTI(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_SLTI_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_SLTIU(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_SLTIU_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_SLTU(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_SLTU_R_FUNCT))
#define MIPS_INST_SLL(RD, RT, SHAMT)		(MIPS_FORMAT_R(0, RT, RD, SHAMT, MIPS_INST_SLL_R_FUNCT))
#define MIPS_INST_SRL(RD, RT, SHAMT)		(MIPS_FORMAT_R(0, RT, RD, SHAMT, MIPS_INST_SRL_R_FUNCT))
#define MIPS_INST_SB(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_SB_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_SC(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_SC_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_SH(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_SH_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_SW(RT, OFFSET, BASE)		(MIPS_FORMAT_I(MIPS_INST_SW_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_SUB(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_SUB_R_FUNCT))
#define MIPS_INST_SUBU(RD, RS, RT)			(MIPS_FORMAT_R(RS, RT, RD, 0, MIPS_INST_SUBU_R_FUNCT))
#define MIPS_INST_BCLT(ADDR)				(MIPS_FORMAT_FI(MIPS_INST_BCLT_FI_FMT, MIPS_INST_BCLT_FI_FT, ADDR))
#define MIPS_INST_BCLF(ADDR)				(MIPS_FORMAT_FI(MIPS_INST_BCLF_FI_FMT, MIPS_INST_BCLF_FI_FT, ADDR))
#define MIPS_INST_DIV(RS, RT)				(MIPS_FORMAT_R(RS, RT, 0, 0, MIPS_INST_DIV_R_FUNCT))
#define MIPS_INST_DIVU(RS, RT)				(MIPS_FORMAT_R(RS, RT, 0, 0, MIPS_INST_DIVU_R_FUNCT))
#define MIPS_INST_ADD_S(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_SINGLE_FMT, FT, FS, FD, MIPS_INST_ADD_FR_FUNCT))
#define MIPS_INST_ADD_D(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_DOUBLE_FMT, FT, FS, FD, MIPS_INST_ADD_FR_FUNCT))
#define MIPS_INST_C_EQ_S(FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_SINGLE_FMT, FT, FS, 0, MIPS_INST_C_EQ_FR_FUNCT))
#define MIPS_INST_C_EQ_D(FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_DOUBLE_FMT, FT, FS, 0, MIPS_INST_C_EQ_FR_FUNCT))
#define MIPS_INST_C_LT_S(FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_SINGLE_FMT, FT, FS, 0, MIPS_INST_C_LT_FR_FUNCT))
#define MIPS_INST_C_LT_D(FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_DOUBLE_FMT, FT, FS, 0, MIPS_INST_C_LT_FR_FUNCT))
#define MIPS_INST_C_LE_S(FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_SINGLE_FMT, FT, FS, 0, MIPS_INST_C_LE_FR_FUNCT))
#define MIPS_INST_C_LE_D(FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_DOUBLE_FMT, FT, FS, 0, MIPS_INST_C_LE_FR_FUNCT))
#define MIPS_INST_DIV_S(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_SINGLE_FMT, FT, FS, FD, MIPS_INST_DIV_FR_FUNCT))
#define MIPS_INST_DIV_D(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_DOUBLE_FMT, FT, FS, FD, MIPS_INST_DIV_FR_FUNCT))
#define MIPS_INST_MUL_S(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_SINGLE_FMT, FT, FS, FD, MIPS_INST_MUL_FR_FUNCT))
#define MIPS_INST_MUL_D(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_DOUBLE_FMT, FT, FS, FD, MIPS_INST_MUL_FR_FUNCT))
#define MIPS_INST_SUB_S(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_SINGLE_FMT, FT, FS, FD, MIPS_INST_SUB_FR_FUNCT))
#define MIPS_INST_SUB_D(FD, FS, FT)			(MIPS_FORMAT_FR(MIPS_FR_DOUBLE_FMT, FT, FS, FD, MIPS_INST_SUB_FR_FUNCT))
#define MIPS_INST_LWCL(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_LWCL_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_LDCL(RT, RS, IMMEDIATE)	(MIPS_FORMAT_I(MIPS_INST_LDCL_OPCODE, RS, RT, IMMEDIATE))
#define MIPS_INST_MFHI(RD)					(MIPS_FORMAT_R(0, 0, RD, 0, MIPS_INST_MFHI_R_FUNCT))
#define MIPS_INST_MFLO(RD)					(MIPS_FORMAT_R(0, 0, RD, 0, MIPS_INST_MFLO_R_FUNCT))
#define MIPS_INST_MFC0(RD, RS)				((MIPS_Inst_Format_t) {.r.opcode=MIPS_INST_MFC0_OPCODE,	.r.rs=RS,	.r.rt=0,	.r.rd=RD,	.r.shamt=0,	.r.funct=MIPS_INST_MFC0_FUNCT})
#define MIPS_INST_MULT(RS, RT)				(MIPS_FORMAT_R(RS, RT, 0, 0, MIPS_INST_MULT_R_FUNCT))
#define MIPS_INST_MULTU(RS, RT)				(MIPS_FORMAT_R(RS, RT, 0, 0, MIPS_INST_MULTU_R_FUNCT))
#define MIPS_INST_SRA(RD, RT, SHAMT)		(MIPS_FORMAT_R(0, RT, RD, SHAMT, MIPS_INST_SRA_R_FUNCT))
#define MIPS_INST_SWCL(RT, OFFSET, BASE)	(MIPS_FORMAT_I(MIPS_INST_SWCL_OPCODE, BASE, RT, OFFSET))
#define MIPS_INST_SDCL(RT, OFFSET, BASE)	(MIPS_FORMAT_I(MIPS_INST_SDCL_OPCODE, BASE, RT, OFFSET))

#endif	// MIPS_DEFINE_H_
